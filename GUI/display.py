import wx
from services.command_handler import CommandHandler

class Application(wx.Frame):
    def __init__(self):
        super().__init__(None, title="Film Search (Sakila)", size=(900, 650))
        self.cmd_handler = CommandHandler()

        # --- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º "debounce" —Ç–∞–π–º–µ—Ä –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É ---
        self.search_delay_ms = 800  #  –º–∏–ª–∏—Å–µ–∫—É–Ω–¥
        self.search_timer = wx.Timer(self)
        # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è EVT_TIMER –∫ –≤–∞—à–µ–º—É –º–µ—Ç–æ–¥—É
        self.Bind(wx.EVT_TIMER, self.on_search_timer, self.search_timer)

        # –°–æ–∑–¥–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–∞–π–∑–µ—Ä (main_sizer), –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
        self.SetBackgroundColour("#FFFFFF")             # (–±–µ–ª—ã–π —Ñ–æ–Ω)
        panel = wx.Panel(self)
        panel.SetBackgroundColour("#FFFFFF")
        main_sizer = wx.BoxSizer(wx.VERTICAL)

        # –°–æ–∑–¥–∞–µ—Ç—Å—è –≤–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å —Å–µ—Ä—ã–º —Ñ–æ–Ω–æ–º –∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–º —Å–∞–π–∑–µ—Ä–æ–º (top_sizer).
        top_panel = wx.Panel(panel)
        top_panel.SetBackgroundColour("#F3F3F3")        # (–°–µ—Ä—ã–π —Ñ–æ–Ω)
        top_sizer = wx.BoxSizer(wx.HORIZONTAL)

        # –û–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —à—Ä–∏—Ñ—Ç—ã –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –º–µ—Ç–æ–∫.
        font_header = wx.Font(12, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, faceName="Segoe UI")
        font_label = wx.Font(10, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, faceName="Segoe UI")

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞
        name_sizer = wx.BoxSizer(wx.VERTICAL)
        name_label = wx.StaticText(top_panel, label="üîé –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é")
        name_label.SetFont(font_label)
        self.name_input = wx.TextCtrl(top_panel, size=(250, -1))
        self.name_input.SetBackgroundColour("#FFFFFF")
        self.name_input.SetForegroundColour("#333333")
        name_sizer.Add(name_label, 0, wx.ALL, 5)
        name_sizer.Add(self.name_input, 0, wx.ALL | wx.EXPAND, 5)


        year_sizer = wx.BoxSizer(wx.VERTICAL)
        year_label = wx.StaticText(top_panel, label="üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –ì–æ–¥")
        year_label.SetFont(font_label)
        years = [""] + self.cmd_handler.get_years()
        self.year_choice = wx.Choice(top_panel, choices=years)
        self.year_choice.SetBackgroundColour("#FFFFFF")
        year_sizer.Add(year_label, 0, wx.ALL, 5)
        year_sizer.Add(self.year_choice, 0, wx.ALL | wx.EXPAND, 5)


        genre_sizer = wx.BoxSizer(wx.VERTICAL)
        genre_label = wx.StaticText(top_panel, label="üé≠ –ñ–∞–Ω—Ä")
        genre_label.SetFont(font_label)
        genres = [""] + self.cmd_handler.get_genres()
        self.genre_choice = wx.Choice(top_panel, choices=genres)
        self.genre_choice.SetBackgroundColour("#FFFFFF")
        genre_sizer.Add(genre_label, 0, wx.ALL, 5)
        genre_sizer.Add(self.genre_choice, 0, wx.ALL | wx.EXPAND, 5)


        self.top_button = wx.Button(top_panel, label="üî• –¢–æ–ø –∑–∞–ø—Ä–æ—Å—ã", size=(120, 35))
        self.top_button.SetBackgroundColour("#0078D7")
        self.top_button.SetForegroundColour("#FFFFFF")
        self.top_button.SetFont(font_label)
        self.top_button.SetWindowStyleFlag(wx.BORDER_NONE)


        top_sizer.Add(name_sizer, 1, wx.ALL | wx.EXPAND, 10)
        top_sizer.Add(year_sizer, 1, wx.ALL | wx.EXPAND, 10)
        top_sizer.Add(genre_sizer, 1, wx.ALL | wx.EXPAND, 10)
        top_sizer.Add(self.top_button, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 20)
        top_panel.SetSizer(top_sizer)


        result_panel = wx.Panel(panel)
        result_panel.SetBackgroundColour("#FFFFFF")
        result_sizer = wx.BoxSizer(wx.VERTICAL)
        result_label = wx.StaticText(result_panel, label="üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞:")
        result_label.SetFont(font_header)
        self.result_box = wx.TextCtrl(result_panel, style=wx.TE_MULTILINE | wx.TE_READONLY, size=(-1, 250))
        self.result_box.SetBackgroundColour("#FFFFFF")
        self.result_box.SetForegroundColour("#333333")
        result_sizer.Add(result_label, 0, wx.ALL, 5)
        result_sizer.Add(self.result_box, 1, wx.ALL | wx.EXPAND, 5)
        result_panel.SetSizer(result_sizer)


        main_sizer.Add(top_panel, 0, wx.EXPAND | wx.ALL, 15)
        main_sizer.Add(result_panel, 1, wx.EXPAND | wx.ALL, 15)
        panel.SetSizer(main_sizer)


        self.name_input.Bind(wx.EVT_TEXT, self.on_update_search)
        self.year_choice.Bind(wx.EVT_CHOICE, self.on_update_search)
        self.genre_choice.Bind(wx.EVT_CHOICE, self.on_update_search)
        self.top_button.Bind(wx.EVT_BUTTON, self.on_top_queries)
        self.Bind(wx.EVT_CLOSE, self.on_close)
        self.name_input.Bind(wx.EVT_TEXT, self.on_update_search)

        self.Show()

    def on_update_search(self, event):
        """
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–≤–æ–¥–∞:
         - –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ ‚Äì –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É.
         - –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –≥–æ–¥ –∏ –∂–∞–Ω—Ä ‚Äì –ø–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥—É.
         - –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –≥–æ–¥ ‚Äì –ø–æ–∏—Å–∫ –ø–æ –≥–æ–¥—É.
         - –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –∂–∞–Ω—Ä ‚Äì –ø–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É.
        """
        keyword = self.name_input.GetValue().strip()
        year_index = self.year_choice.GetSelection()
        genre_index = self.genre_choice.GetSelection()
        year_val = self.year_choice.GetStringSelection() if year_index != wx.NOT_FOUND else ""
        genre_val = self.genre_choice.GetStringSelection() if genre_index != wx.NOT_FOUND else ""

        if keyword:
            results = self.cmd_handler.search_keyword_no_save(keyword)
            self.display_films(results)
        elif year_val and genre_val:
            results = self.cmd_handler.search_genre_year(genre_val, year_val)
            self.display_films(results)
        elif year_val:
            results = self.cmd_handler.search_year(year_val)
            self.display_films(results)
        elif genre_val:
            results = self.cmd_handler.search_genre(genre_val)
            self.display_films(results)
        else:
            self.result_box.SetValue("")

        if self.search_timer.IsRunning():
            self.search_timer.Stop()
        self.search_timer.Start(self.search_delay_ms, oneShot=True)

    def on_search_timer(self, event):
        keyword = self.name_input.GetValue().strip()
        if keyword:
            self.cmd_handler.save_query_only(keyword, "search_keyword")

    def on_top_queries(self, event):
        """
        –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–≤—É—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ (MongoDB):
        1) –¢–æ–ø-3 –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        2) –¢–æ–ø-3 –ø–æ–∏—Å–∫–∞ –ø–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥—É
        """
        top_keywords = self.cmd_handler.get_top_keywords()  # –≠—Ç–æ —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ [{'_id': ..., 'count': ...}, ...]
        top_genre_year = self.cmd_handler.get_top_genres_year()  # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ

        display_text = "üî• –¢–æ–ø-3 –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º:\n\n"
        for i, doc in enumerate(top_keywords, start=1):
            # doc['_id'] –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∫–æ–π, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–∞–º–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
            # doc['count'] ‚Äî —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ–Ω–æ –≤—Å—Ç—Ä–µ—á–∞–ª–æ—Å—å
            display_text += f"{i}. {doc['_id']} ‚Äî {doc['count']} —Ä–∞–∑\n"

        display_text += "\nüî• –¢–æ–ø-3 –ø–æ–∏—Å–∫–∞ –ø–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥—É:\n\n"
        for i, doc in enumerate(top_genre_year, start=1):
            # doc['_id'] –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∫–æ–π, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è "Comedy, 2006" –∏–ª–∏ "Action, 2010"
            display_text += f"{i}. {doc['_id']} ‚Äî {doc['count']} —Ä–∞–∑\n"

        self.result_box.SetValue(display_text)

    def display_films(self, films):
        self.result_box.Clear()
        if films:
            output = "–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã:\n\n"
            for film in films:
                title = film.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
                description = film.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
                release_year = film.get("release_year", "–ù–µ —É–∫–∞–∑–∞–Ω")
                genre = film.get("genre", "")
                output += f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n"
                output += f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n"
                output += f"–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {release_year}\n"
                if genre:
                    output += f"–ñ–∞–Ω—Ä: {genre}\n"
                output += "-" * 100 + "\n"
            self.result_box.SetValue(output)
        else:
            self.result_box.SetValue("–§–∏–ª—å–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    def on_close(self, event):
        self.cmd_handler.close()
        self.Destroy()


